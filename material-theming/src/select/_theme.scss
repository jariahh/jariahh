@use 'sass:map';
@use '@angular/material/core/theming/theming';
@use "@angular/material/core/mdc-helpers/mdc-helpers";

@import '../functions';

@mixin theme($config-or-theme) {
  $config: theming.get-color-config($config-or-theme);
  @include mdc-helpers.using-mdc-theme($config) {
    $is-dark: map.get($config, is-dark);
    $colors: map.get($config-or-theme, color);
    .mat-mdc-form-field {
      @each $color, $values in $colors {
        @if (is-map($values)) {
          $contrast: map.get($values, contrast);
          @if (is-map($contrast)) {
            $on-surface: map.get($contrast, 500);
            $surface: map.get($values, 500);
            &.mat-#{$color} {
              .mdc-text-field--focused:not(.mdc-text-field--disabled) .mdc-floating-label {
                color: rgba($surface, 0.87);
              }
            }
          }
        }
      }
    }
    .mat-mdc-select-panel {
      @each $color, $values in $colors {
        @if (is-map($values)) {
          $contrast: map.get($values, contrast);
          @if (is-map($contrast)) {
            $on-surface: map.get($contrast, 500);
            $surface: map.get($values, 500);
            &.mat-#{$color} {
              .mdc-list-item--selected .mdc-list-item__primary-text, .mdc-list-item--activated .mdc-list-item__primary-text {
                color: var(--mdc-theme-primary, #{$surface});
              }

              .mat-pseudo-checkbox-checked, .mat-pseudo-checkbox-indeterminate {
                background: #{$surface};

                &:after {
                  color: #{$on-surface} !important;
                }
              }
            }
          }
        }
      }
    }
  }
}
